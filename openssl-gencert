#!/usr/bin/env sh
# Usage:
#   openssl-gencert localhost
# This script depends ~/.openssl.cnf, download example from:
#   https://github.com/crzidea/confbook/blob/master/.openssl.cnf
# Inspired by:
#   https://nodejs.org/api/tls.html#tls_tls_ssl_concepts
set -e
workdir=$PWD
ca_dir="$HOME/.ca"
hostname=`cat /etc/hostname`

if [ -d $ca_dir ]; then
  echo $ca_dir exists
  >$ca_dir/index.txt
else
  mkdir -p $ca_dir
  cd $ca_dir
  mkdir -p newcerts private
  touch index.txt
  echo 00 >serial

  # https://android.stackexchange.com/questions/237141/how-to-get-android-11-to-trust-a-user-root-ca-without-a-private-key
  echo 'basicConstraints=CA:true' > android_options.txt

  openssl genrsa -out private/cakey.pem 2048
  openssl req \
    -new -sha256 \
    -key private/cakey.pem \
    -subj "/CN=${USER}@${hostname} Root CA" \
    -out cacsr.pem

  # https://apple.stackexchange.com/questions/371725/why-does-ios-13-not-trust-my-own-root-ca
  openssl x509 -req \
    -in cacsr.pem \
    -signkey private/cakey.pem \
    -days 825 \
    -extfile android_options.txt \
    -out cacert.pem
fi

common_name=$1
mkdir -p $workdir/$common_name
cd $workdir/$common_name
openssl genrsa -out key.pem 2048
openssl req -new -sha256 -key key.pem -out csr.pem -subj "/CN=${common_name}"

# https://stackoverflow.com/questions/43665243/invalid-self-signed-ssl-cert-subject-alternative-name-missing
SAN=DNS:$common_name,DNS:*.$common_name openssl ca -batch \
  -config $HOME/.openssl.cnf \
  -in csr.pem \
  -out ./cert.pem \
	-extensions san_env
